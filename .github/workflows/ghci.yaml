name: ghci

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'ghci/**'
      - '.github/workflows/ghci.yaml'
  push:
    branches: [ main ]
    paths:
      - 'ghci/**'
      - '.github/workflows/ghci.yaml'
    tags:
      - 'ghci-*'

env:
  GCC_VERSION: "11.4.0"
  MPICH_VERSION: "3.4.3"
  SZIP_VERSION: "2.1.1"
  HDF5_VERSION: "1.12.3"
  NETCDFC_VERSION: "4.9.2"
  NETCDFCXX_VERSION: "4.2"
  NETCDFFORTRAN_VERSION: "4.6.1"
  PNETCDF_VERSION: "1.12.1"

jobs:
  ocis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          show-progress: false
          persist-credentials: false
      -
        name: GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}-ghci
          labels: |
            org.opencontainers.image.description=E3SM ghci container is mainly for testing on github actions
      -
        name: QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Push
        uses: docker/build-push-action@v6
        with:
          context: ghci/
          file: ghci/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GCC_VERSION=${{ env.GCC_VERSION }}
            MPICH_VERSION=${{ env.MPICH_VERSION }}
            SZIP_VERSION=${{ env.SZIP_VERSION }}
            HDF5_VERSION=${{ env.HDF5_VERSION }}
            NETCDFC_VERSION=${{ env.NETCDFC_VERSION }}
            NETCDFCXX_VERSION=${{ env.NETCDFCXX_VERSION }}
            NETCDFFORTRAN_VERSION=${{ env.NETCDFFORTRAN_VERSION }}
            PNETCDF_VERSION=${{ env.PNETCDF_VERSION }}
